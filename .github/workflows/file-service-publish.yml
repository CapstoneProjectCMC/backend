name: Build & Push file-service

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'FileService/**'
      - 'docker/file-service.Dockerfile'
      - '.github/workflows/file-service-publish.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-file-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Derive tags (Docker Hub + GHCR)
        id: meta
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          echo "OWNER_LC=$OWNER_LC" >> $GITHUB_ENV
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            TAG="${GITHUB_REF_NAME#v}"
          else
            TAG="${GITHUB_SHA::12}"
          fi
          echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV

          HUB="${{ secrets.DOCKERHUB_USER }}/codecampus-file-service:${TAG}"
          GHCR="ghcr.io/${OWNER_LC}/codecampus-file-service:${TAG}"
          if [ "${GITHUB_REF_TYPE}" = "tag" ] || [ "${GITHUB_REF_NAME}" = "main" ]; then
            HUB="${HUB}"$'\n'"${{ secrets.DOCKERHUB_USER }}/codecampus-file-service:latest"
            GHCR="${GHCR}"$'\n'"ghcr.io/${OWNER_LC}/codecampus-file-service:latest"
          fi
          echo "tags=${HUB}"$'\n'"${GHCR}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push file-service
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/file-service.Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
