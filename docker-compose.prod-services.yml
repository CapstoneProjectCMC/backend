name: codecampus-services
services:
  ########################
  #     ỨNG DỤNG chính    #
  ########################
  identity-service:
    image: ${DOCKERHUB_USER}/codecampus-identity-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - IDENTITY_DATABASE=${IDENTITY_DATABASE}
      - IDENTITY_USERNAME=${IDENTITY_USERNAME}
      - IDENTITY_DB_PASSWORD=${IDENTITY_DB_PASSWORD}
      - INIT_ADMIN_USERNAME=admin
      - INIT_ADMIN_PASSWORD=adminRoot123
      - INIT_ADMIN_EMAIL=adminRoot123@gmail.com
      - INIT_TEACHER_USERNAME=teacherRoot
      - INIT_TEACHER_PASSWORD=teacherRoot123
      - INIT_TEACHER_EMAIL=teacherRoot123@gmail.com
      - INIT_STUDENT_USERNAME=userRoot
      - INIT_STUDENT_PASSWORD=userRoot123
      - INIT_STUDENT_EMAIL=userRoot123@gmail.com
      - TEMP_PASSWORD=password123
    ports: [ "8080:8080" ]
    depends_on:
      - profile-service
    networks: [ backend ]

  profile-service:
    image: ${DOCKERHUB_USER}/codecampus-profile-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports: [ "8081:8081" ]
    networks: [ backend ]

  submission-service:
    image: ${DOCKERHUB_USER}/codecampus-submission-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SUBMISSION_DATABASE=${SUBMISSION_DATABASE}
      - SUBMISSION_USERNAME=${SUBMISSION_USERNAME}
      - SUBMISSION_DB_PASSWORD=${SUBMISSION_DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports: [ "8083:8083", "9590:9590" ]
    depends_on:
      - profile-service
    networks: [ backend ]

  coding-service:
    container_name: code_coding
    image: ${DOCKERHUB_USER}/codecampus-coding-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CODING_DATABASE=${CODING_DATABASE}
      - CODING_USERNAME=${CODING_USERNAME}
      - CODING_DB_PASSWORD=${CODING_DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SANDBOX_IMAGE=capstoneprojectpythondocker:latest
      - RUNNER_ROOT=/work
      - RUNNER_VOLUME=runner_data
      - SELF_CONTAINER=code_coding
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # cần cho 'docker run'
      - runner_data:/work
    user: "1001"
    group_add:
      - "${DOCKER_GID}"
    ports:
      - "8084:8084"
      - "4098:4098"
      - "9592:9592"
    networks: [ backend ]

  sandbox-image:
    build:
      context: .
      dockerfile: ./docker/sandbox.Dockerfile
    image: capstoneprojectpythondocker:latest
    profiles: [ "build-only" ]

  quiz-service:
    image: ${DOCKERHUB_USER}/codecampus-quiz-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - QUIZ_DATABASE=${QUIZ_DATABASE}
      - QUIZ_USERNAME=${QUIZ_USERNAME}
      - QUIZ_DB_PASSWORD=${QUIZ_DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports: [ "8085:8085", "9591:9591" ]
    networks: [ backend ]

  ai-service:
    image: ${DOCKERHUB_USER}/codecampus-ai-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - AI_DATABASE=${AI_DATABASE}
      - AI_USERNAME=${AI_USERNAME}
      - AI_DB_PASSWORD=${AI_DB_PASSWORD}
      - SPRING_AI_OPENAI_API_KEY=${OPENAI_API_KEY}
      - APP_FILE_UPLOAD_DIR=/data/ai-uploads
      - SPRING_WEB_RESOURCES_STATIC_LOCATIONS=file:/data/ai-uploads/,classpath:/static/
      - APP_PUBLIC_BASE_URL=http://localhost:8888/api/v1/ai
    ports: [ "8086:8086" ]
    volumes:
      - ai_uploads:/data/ai-uploads
    networks: [ backend ]

  search-service:
    image: ${DOCKERHUB_USER}/codecampus-search-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports: [ "8087:8087" ]
    depends_on:
      - profile-service
      - submission-service
    networks: [ backend ]

  notification-service:
    image: ${DOCKERHUB_USER}/codecampus-notification-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports: [ "8088:8088" ]
    networks: [ backend ]

  chat-service:
    image: ${DOCKERHUB_USER}/codecampus-chat-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CHAT_USERNAME=${CHAT_USERNAME}
      - CHAT_PASSWORD=${CHAT_PASSWORD}
      - CHAT_DATABASE=${CHAT_DATABASE}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8089:8089"
      - "4099:4099"
    networks: [ backend ]

  post-service:
    image: ${DOCKERHUB_USER}/codecampus-post-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POST_DATABASE=${POST_DATABASE}
      - POST_USERNAME=${POST_USERNAME}
      - POST_DB_PASSWORD=${POST_DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports: [ "8090:8090" ]
    networks: [ backend ]

  payment-service:
    image: ${DOCKERHUB_USER}/codecampus-payment-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PAYMENT_DATABASE=${PAYMENT_DATABASE}
      - PAYMENT_USERNAME=${PAYMENT_USERNAME}
      - PAYMENT_DB_PASSWORD=${PAYMENT_DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports: [ "8091:8091" ]
    networks: [ backend ]

  organization-service:
    image: ${DOCKERHUB_USER}/codecampus-organization-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ORGANIZATION_DATABASE=${ORGANIZATION_DATABASE}
      - ORGANIZATION_USERNAME=${ORGANIZATION_USERNAME}
      - ORGANIZATION_DB_PASSWORD=${ORGANIZATION_DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports: [ "8092:8092" ]
    networks: [ backend ]

  file-service:
    build:
      context: .
      dockerfile: ./docker/file-service.Dockerfile
    image: ${DOCKERHUB_USER}/codecampus-file-service:${IMAGE_TAG:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - MongoDbSettings__ConnectionStrings=mongodb://${FILE_USERNAME}:${FILE_PASSWORD}@file-db:27017/${FILE_DATABASE}?authSource=${FILE_DATABASE}
      - MongoDbSettings__DatabaseName=${FILE_DATABASE}
      - AppSettings__ApiSettings__UserServiceBaseUrl=http://profile-service:8081
      - AppSettings__MinioConfig__Endpoint=minio
      - AppSettings__MinioConfig__PublicEndpoint=localhost
      - AppSettings__MinioConfig__Port=9000
      - AppSettings__MinioConfig__AccessKey=${MINIO_ROOT_USER}
      - AppSettings__MinioConfig__SecretKey=${MINIO_ROOT_PASSWORD}
      - AppSettings__MinioConfig__BucketName=programmingcontest2025
      - AppSettings__MinioConfig__Secure=false
      - AppSettings__Jwt__Key=1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij
      - AppSettings__Jwt__Issuer=Code Campus
      - AppSettings__Jwt__Audience=Code Campus
    ports: [ "8082:8082" ]
    networks: [ backend ]

  gateway-service:
    image: ${DOCKERHUB_USER}/codecampus-gateway-service:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - APP_API_PREFIX=/api/v1
    ports: [ "8888:8888" ]
    depends_on:
      - identity-service
      - profile-service
      - submission-service
      - coding-service
      - quiz-service
      - ai-service
      - search-service
      - notification-service
      - chat-service
    networks: [ backend ]

########################
#   NETWORK & VOLUME    #
########################
networks:
  backend:
    name: codecampus_backend
    external: true

volumes:
  runner_data:
  ai_uploads: