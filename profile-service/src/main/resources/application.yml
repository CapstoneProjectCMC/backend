server:
  port: 8081
  servlet:
    context-path: /profile
#  ssl:
#    enabled: true
#    key-store: classpath:ssl/profile.p12
#    key-store-type: PKCS12
#    key-store-password: changeit
#    key-alias: profile-https
#    client-auth: need
#    trust-store: classpath:ssl/truststore.p12
#    trust-store-type: PKCS12
#    trust-store-password: changeit

spring:
  application:
    name: profile-service
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  neo4j:
    uri: neo4j://localhost:7687
    authentication:
      username: neo4j
      password: dinhanst2832004
    schema-action: create
  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: profile-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"
  data:
    redis:
      host: localhost # dịch vụ trong compose
      port: 6379
      password: dinhanst2832004
      timeout: 3000ms

app:
  services:
    file: http://localhost:8082/file
    organization: http://localhost:8091/org
    submission: http://localhost:8083/submission
    post: http://localhost:8090/post
  event:
    user-events: "user-events"
    user-registrations: "user-registrations"
    profile-events: "profile-events"
    organization-events: "organization-events"
    org-member-events: "org-member-events"
    exercise-events: "exercise-events"
    contest-events: "contest-events"
    exercise-status-events: "exercise-status-events"
    contest-status-events: "contest-status-events"
    post-events: "post-events"
