name: codecampus
services:
  identity-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: identity-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - IDENTITY_DATABASE=${IDENTITY_DATABASE}
      - IDENTITY_USERNAME=${IDENTITY_USERNAME}
      - IDENTITY_DB_PASSWORD=${IDENTITY_DB_PASSWORD}
    ports:
      - "8080:8080"
    networks: [ backend ]

  profile-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: profile-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    ports:
      - "8081:8081"
    networks: [ backend ]

  submission-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: submission-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SUBMISSION_DATABASE=${SUBMISSION_DATABASE}
      - SUBMISSION_USERNAME=${SUBMISSION_USERNAME}
      - SUBMISSION_DB_PASSWORD=${SUBMISSION_DB_PASSWORD}
    ports:
      - "8083:8083"
      - "9590:9590"
    networks: [ backend ]

  coding-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: coding-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CODING_DATABASE=${CODING_DATABASE}
      - CODING_USERNAME=${CODING_USERNAME}
      - CODING_DB_PASSWORD=${CODING_DB_PASSWORD}
    ports:
      - "8084:8084"
      - "9592:9592"
    networks: [ backend ]

  quiz-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: quiz-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - QUIZ_DATABASE=${QUIZ_DATABASE}
      - QUIZ_USERNAME=${QUIZ_USERNAME}
      - QUIZ_DB_PASSWORD=${QUIZ_DB_PASSWORD}
    ports:
      - "8085:8085"
      - "9591:9591"
    networks: [ backend ]

  ai-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: ai-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - AI_DATABASE=${AI_DATABASE}
      - AI_USERNAME=${AI_USERNAME}
      - AI_DB_PASSWORD=${AI_DB_PASSWORD}
      - SPRING_AI_OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8086:8086"
    networks: [ backend ]

  search-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: search-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "8087:8087"
    networks: [ backend ]

  notification-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: notification-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8088:8088"
    networks: [ backend ]

  chat-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: chat-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CHAT_USERNAME=${CHAT_USERNAME}
      - CHAT_PASSWORD=${CHAT_PASSWORD}
      - CHAT_DATABASE=${CHAT_DATABASE}
    ports:
      - "8089:8089"
    networks: [ backend ]

  gateway-service:
    build:
      context: .
      dockerfile: docker/java-service.Dockerfile
      args:
        MODULE: gateway-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - APP_API_PREFIX=/api/v1
    depends_on:
      - identity-service
      - profile-service
      - submission-service
      - coding-service
      - quiz-service
      - ai-service
      - search-service
      - notification-service
      - chat-service
    ports:
      - "8888:8888"
    networks: [ backend ]

networks:
  backend:
    external: true
    name: codecampus_backend